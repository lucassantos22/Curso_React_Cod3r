{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/lucas/TI/Curso-React-Cod3r/projeto-pessoal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Table,Button,Card,InputGroup,FormControl}from'react-bootstrap';import{Check,TrashFill,Exclamation}from'react-bootstrap-icons';export default(function(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:props.title}),/*#__PURE__*/_jsx(Table,{striped:true,hover:true,responsive:true,borderless:true,children:props.tasks.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tarefa\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:props.tasks.map(function(task){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:task.completed?/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return props.completeTask(task.url,false);},variant:\"success\",children:/*#__PURE__*/_jsx(Check,{size:\"20\"})}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return props.completeTask(task.url,true);},variant:\"warning\",children:/*#__PURE__*/_jsx(Exclamation,{size:\"20\"})})}),task.completed===false?/*#__PURE__*/_jsxs(InputGroup,{style:{width:'100%',marginTop:'12px'},children:[/*#__PURE__*/_jsx(FormControl,{placeholder:task.title,onChange:function onChange(e){return setTitle(e.target.value);}}),/*#__PURE__*/_jsx(InputGroup.Append,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){return props.editTask(task.url,title);},children:\"Editar\"})})]}):/*#__PURE__*/_jsx(\"td\",{style:{textDecoration:'line-through'},children:/*#__PURE__*/_jsx(\"span\",{style:{marginTop:'12px'},children:task.title})}),!task.completed?/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:function onClick(){return props.deleteTask(task.url);},children:/*#__PURE__*/_jsx(TrashFill,{})})}):/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",disabled:true,children:/*#__PURE__*/_jsx(TrashFill,{})})})]},task.url);})})]}):/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{id:\"Sobre\",children:\"Lista vazia\"}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Ops! N\\xE3o existem tarefas \",props.completed===true?'concluídas':!props.completed?'em andamento':'',\" cadastradas :(\"]})]})})}),props.completed?/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"sm\",onClick:function onClick(){return props.deleteCompletedTasks();},children:\"Limpar tarefas conclu\\xEDdas\"}):null]});});","map":{"version":3,"sources":["/home/lucas/TI/Curso-React-Cod3r/projeto-pessoal/src/components/templates/Table.js"],"names":["React","useState","Table","Button","Card","InputGroup","FormControl","Check","TrashFill","Exclamation","props","title","setTitle","tasks","length","map","task","completed","completeTask","url","width","marginTop","e","target","value","editTask","textDecoration","deleteTask","deleteCompletedTasks"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {Table, Button, Card, InputGroup, FormControl} from 'react-bootstrap';\nimport { Check, TrashFill, Exclamation } from 'react-bootstrap-icons';\n\n\nexport default props => {\n\n    const [title, setTitle] = useState('');\n\n    return (\n        <>\n            <h3>{props.title}</h3>\n            <Table striped hover responsive borderless>\n                {props.tasks.length > 0 ? \n                    <>\n                        <thead>\n                            <tr>\n                                <th>Status</th>\n                                <th>Tarefa</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.tasks.map(task=>(\n                                <tr key={task.url}>\n                                    <td>{task.completed ? <Button onClick={()=>props.completeTask(task.url, false)} variant='success'><Check size='20'/></Button> : <Button onClick={()=>props.completeTask(task.url, true)} variant='warning'><Exclamation size='20'/></Button>}</td>\n                                    {task.completed === false? \n                                    <InputGroup style={{width: '100%', marginTop: '12px'}}>\n                                        <FormControl\n                                            placeholder={task.title}\n                                            onChange={e => setTitle(e.target.value)}\n                                        />\n                                        <InputGroup.Append>\n                                        <Button variant=\"primary\" onClick={()=>props.editTask(task.url, title)}>Editar</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                        : <td style={{textDecoration: 'line-through'}}><span style={{marginTop: '12px'}}>{task.title}</span></td>}\n                                    {!task.completed ? <td><Button variant=\"danger\" onClick={()=>props.deleteTask(task.url)}><TrashFill/></Button></td> : <td><Button variant=\"secondary\" disabled><TrashFill/></Button></td>}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </>\n                : \n                    <Card>\n                    <Card.Body>\n                        <Card.Title id='Sobre'>Lista vazia</Card.Title>\n                        <Card.Text>\n                            Ops! Não existem tarefas {props.completed === true ? 'concluídas' : !props.completed ? 'em andamento' : ''} cadastradas :(\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n                }\n            </Table>\n            {props.completed ?\n                <Button variant=\"primary\" size=\"sm\" onClick={()=>props.deleteCompletedTasks()}>\n                    Limpar tarefas concluídas\n                </Button>\n                : null\n            }\n                        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}