{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucas/TI/Curso-React-Cod3r/projeto-pessoal/src/components/templates/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table, Button, Card, InputGroup, FormControl } from 'react-bootstrap';\nimport { Check, TrashFill, Exclamation } from 'react-bootstrap-icons';\nexport default _s(props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), props.completed ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"ml-1000px\",\n      size: \"sm\",\n      onClick: () => props.deleteCompletedTasks(),\n      children: \"Limpar tarefas conclu\\xEDdas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      hover: true,\n      responsive: true,\n      borderless: true,\n      children: props.tasks.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tarefa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: props.tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.completed ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => props.completeTask(task.url, false),\n                variant: \"success\",\n                children: /*#__PURE__*/_jsxDEV(Check, {\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 135\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 59\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => props.completeTask(task.url, true),\n                variant: \"warning\",\n                children: /*#__PURE__*/_jsxDEV(Exclamation, {\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 240\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 165\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this), task.completed === false ? /*#__PURE__*/_jsxDEV(InputGroup, {\n              style: {\n                width: '100%',\n                marginTop: '12px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                placeholder: task.title,\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => props.editTask(task.url, title),\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                textDecoration: 'line-through'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginTop: '12px'\n                },\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this), !task.completed ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => props.deleteTask(task.url),\n                children: /*#__PURE__*/_jsxDEV(TrashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 126\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 56\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                disabled: true,\n                children: /*#__PURE__*/_jsxDEV(TrashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 196\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 159\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 155\n            }, this)]\n          }, task.url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            id: \"Sobre\",\n            children: \"Lista vazia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Ops! N\\xE3o existem tarefas \", props.completed === true ? 'conclu√≠das' : !props.completed ? 'em andamento' : '', \" cadastradas :(\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");","map":{"version":3,"sources":["/home/lucas/TI/Curso-React-Cod3r/projeto-pessoal/src/components/templates/Table.js"],"names":["React","useState","Table","Button","Card","InputGroup","FormControl","Check","TrashFill","Exclamation","props","title","setTitle","completed","deleteCompletedTasks","tasks","length","map","task","completeTask","url","width","marginTop","e","target","value","editTask","textDecoration","deleteTask"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,UAA7B,EAAyCC,WAAzC,QAA2D,iBAA3D;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,uBAA9C;AAEA,kBAAeC,KAAK,IAAI;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAKS,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,KAAK,CAACG,SAAN,gBACG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,SAAS,EAAC,WAApC;AAAgD,MAAA,IAAI,EAAC,IAArD;AAA0D,MAAA,OAAO,EAAE,MAAIH,KAAK,CAACI,oBAAN,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAIC,IANN,eAQI,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,UAAU,MAA/B;AAAgC,MAAA,UAAU,MAA1C;AAAA,gBACKJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,GAAqB,CAArB,gBACG;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,oBACKN,KAAK,CAACK,KAAN,CAAYE,GAAZ,CAAgBC,IAAI,iBACjB;AAAA,oCACI;AAAA,wBAAKA,IAAI,CAACL,SAAL,gBAAiB,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAIH,KAAK,CAACS,YAAN,CAAmBD,IAAI,CAACE,GAAxB,EAA6B,KAA7B,CAArB;AAA0D,gBAAA,OAAO,EAAC,SAAlE;AAAA,uCAA4E,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,sBAAjB,gBAA2H,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAIV,KAAK,CAACS,YAAN,CAAmBD,IAAI,CAACE,GAAxB,EAA6B,IAA7B,CAArB;AAAyD,gBAAA,OAAO,EAAC,SAAjE;AAAA,uCAA2E,QAAC,WAAD;AAAa,kBAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA;AAAhI;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKF,IAAI,CAACL,SAAL,KAAmB,KAAnB,gBACD,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAACQ,gBAAAA,KAAK,EAAE,MAAR;AAAgBC,gBAAAA,SAAS,EAAE;AAA3B,eAAnB;AAAA,sCACI,QAAC,WAAD;AACI,gBAAA,WAAW,EAAEJ,IAAI,CAACP,KADtB;AAEI,gBAAA,QAAQ,EAAEY,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI,QAAC,UAAD,CAAY,MAAZ;AAAA,uCACA,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,SAAhB;AAA0B,kBAAA,OAAO,EAAE,MAAIf,KAAK,CAACgB,QAAN,CAAeR,IAAI,CAACE,GAApB,EAAyBT,KAAzB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADC,gBAUK;AAAI,cAAA,KAAK,EAAE;AAACgB,gBAAAA,cAAc,EAAE;AAAjB,eAAX;AAAA,qCAA6C;AAAM,gBAAA,KAAK,EAAE;AAACL,kBAAAA,SAAS,EAAE;AAAZ,iBAAb;AAAA,0BAAmCJ,IAAI,CAACP;AAAxC;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAZV,EAaK,CAACO,IAAI,CAACL,SAAN,gBAAkB;AAAA,qCAAI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,QAAhB;AAAyB,gBAAA,OAAO,EAAE,MAAIH,KAAK,CAACkB,UAAN,CAAiBV,IAAI,CAACE,GAAtB,CAAtC;AAAA,uCAAkE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAlE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAAlB,gBAAqH;AAAA,qCAAI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,QAAQ,MAApC;AAAA,uCAAqC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAb1H;AAAA,aAASF,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,sBADH,gBA6BG,QAAC,IAAD;AAAA,+BACA,QAAC,IAAD,CAAM,IAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,uDAC8BV,KAAK,CAACG,SAAN,KAAoB,IAApB,GAA2B,YAA3B,GAA0C,CAACH,KAAK,CAACG,SAAP,GAAmB,cAAnB,GAAoC,EAD5G;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA9BR;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAmDH,CAvDD","sourcesContent":["import React, {useState} from 'react';\n\nimport {Table, Button, Card, InputGroup, FormControl} from 'react-bootstrap';\nimport { Check, TrashFill, Exclamation } from 'react-bootstrap-icons';\n\nexport default props => {\n\n    const [title, setTitle] = useState('');\n\n    return (\n        <>\n            <h3>{props.title}</h3>\n            {props.completed ?\n                <Button variant=\"primary\" className='ml-1000px' size=\"sm\" onClick={()=>props.deleteCompletedTasks()}>\n                    Limpar tarefas conclu√≠das\n                </Button>\n            : null\n            }\n            <Table striped hover responsive borderless>\n                {props.tasks.length > 0 ? \n                    <>\n                        <thead>\n                            <tr>\n                                <th>Status</th>\n                                <th>Tarefa</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.tasks.map(task=>(\n                                <tr key={task.url}>\n                                    <td>{task.completed ? <Button onClick={()=>props.completeTask(task.url, false)} variant='success'><Check size='20'/></Button> : <Button onClick={()=>props.completeTask(task.url, true)} variant='warning'><Exclamation size='20'/></Button>}</td>\n                                    {task.completed === false? \n                                    <InputGroup style={{width: '100%', marginTop: '12px'}}>\n                                        <FormControl\n                                            placeholder={task.title}\n                                            onChange={e => setTitle(e.target.value)}\n                                        />\n                                        <InputGroup.Append>\n                                        <Button variant=\"primary\" onClick={()=>props.editTask(task.url, title)}>Editar</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                        : <td style={{textDecoration: 'line-through'}}><span style={{marginTop: '12px'}}>{task.title}</span></td>}\n                                    {!task.completed ? <td><Button variant=\"danger\" onClick={()=>props.deleteTask(task.url)}><TrashFill/></Button></td> : <td><Button variant=\"secondary\" disabled><TrashFill/></Button></td>}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </>\n                : \n                    <Card>\n                    <Card.Body>\n                        <Card.Title id='Sobre'>Lista vazia</Card.Title>\n                        <Card.Text>\n                            Ops! N√£o existem tarefas {props.completed === true ? 'conclu√≠das' : !props.completed ? 'em andamento' : ''} cadastradas :(\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n                }\n            </Table>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}